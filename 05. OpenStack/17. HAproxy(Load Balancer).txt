------------+---------------------------+---------------------------+------------
            |                           |                           |
       ens32|192.168.1.100         ens32|192.168.1.200         ens32|192.168.1.150
+-----------+-----------+   +-----------+-----------+   +-----------+-----------+
|    [ Control Node ]   |   |    [ Network Node ]   |   |    [ Compute Node ]   |
|                       |   |                       |   |                       |
|  MariaDB    RabbitMQ  |   |      Open vSwitch     |   |        Libvirt        |
|  Memcached  httpd     |   |        L2 Agent       |   |     Nova Compute      |
|  Keystone   Glance    |   |        L3 Agent       |   |      Open vSwitch     |
|  Nova API  Cinder API |   |     Metadata Agent    |   |        L2 Agent       |
|  Neutron Server       |   |     Cinder Volume     |   |  Ceilometer Compute   |
|  Metadata Agent       |   |        Heat API       |   |                       |
|  Gnocchi              |   |      Heat Engine      |   |                       |
|  Ceilometer Central   |   |                       |   |                       |
+-----------------------+   +-----------------------+   +-----------------------+



[ ### Controller Node ### ]

[root@Controller ~(keystone)]# cd /etc/heat/templates/

# 로드 밸런서용 스택생성을 위해 기존 템플릿 복사
[root@Controller ~(keystone)]# cp -p Web.yaml LB.yaml
[root@Controller ~(keystone)]# cp -p Web_Enviornment.yaml LB_Enviornment.yaml


# 호스트 네임 구분을 위해 수정
[root@Controller ~(keystone)]# vi LB.yaml

heat_template_version: 2015-10-15

resources:
  floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: ext_net

  instance_port:
    type: OS::Neutron::Port
    properties:
      network: int_net
      security_groups:
        - security01
      fixed_ips:
        - subnet_id: int_subnet

  server:
    type: OS::Nova::Server
    properties:
      name: LB_Server
      image: CentOS7_image
      flavor: m1.micro
      key_name: SSH_KEY
      networks:
        - port: { get_resource: instance_port }
      user_data_format: RAW
      user_data: |
        #!/bin/bash
        yum -y install epel-release
        yum -y install httpd git
        systemctl enable httpd.service
        systemctl start httpd.service
        sed -i "s/enforcing/disabled/g" /etc/selinux/config
        setenforce 0
        sudo git clone https://github.com/jang2100/LegacyWEB.git /var/www/html
        mv /var/www/html/Secure_Check.txt /root/
        mv /var/www/html/images/logo.PNG /var/www/html/images/logo.png
        sudo chmod 700 /root/Secure_Check.txt
        sed -i 144s/Indexes// /etc/httpd/conf/httpd.conf
        sed -i 144s/FollowSymLinks// /etc/httpd/conf/httpd.conf

        #while [ 1 ] ; do echo $((13**99)) 1>/dev/null 2>&1; done


  association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: floating_ip }
      server_id: { get_resource: server }

outputs:
  instance_name:
    description: Web_Server
    value: { get_attr: [ server, name ] }
  instance_ip:
    description: IP address of the instance.
    value: { get_attr: [ server, first_address ] }


# 호출하는 파일명 수정

[root@Controller ~(keystone)]# vi LB_Enviornment.yaml

resource_registry:
    "OS::Nova::Server::Cirros": "LB.yaml"



#Centos 계정으로 진행

[centos@Controller ~(keystone)]$ openstack stack create -t LB.yaml -e LB_Enviornment.yaml LB_Stack
[centos@Controller ~(keystone)]$ openstack server list
+--------------------------------------+----------------+---------+------------------------------------+---------------+-----------+
| ID                                   | Name           | Status  | Networks                           | Image         | Flavor    |
+--------------------------------------+----------------+---------+------------------------------------+---------------+-----------+
| c4870915-e932-4b60-b254-7040a0d6d260 | Web_Server     | ACTIVE  | int_net=10.10.1.65, 192.168.1.243  | CentOS7_image | m1.xsmall |
| c6235134-e324-4b72-b632-4262a2d2d836 | LB_Server      | ACTIVE  | int_net=10.10.1.65, 192.168.1.231  | CentOS7_image | m1.xsmall |
+--------------------------------------+----------------+---------+------------------------------------+---------------+-----------+



[centos@Controller ~(keystone)]$ ssh centos@192.168.1.231

[centos@lb-server ~]# sudo passwd root
[centos@lb-server ~]# su root

[root@lb-server centos]# yum -y install haproxy

[root@lb-server centos]# vi /etc/haproxy/haproxy.cfg

# 설정파일 백업 및 새 파일 생성
[root@lb-server centos]# mv /etc/haproxy/haproxy.cfg /backup

----------------------------------------------------------------------------

global
      # for logging section
    log         127.0.0.1 local2 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
      # max per-process number of connections
    maxconn     256
      # process' user and group
    user        haproxy
    group       haproxy
      # makes the process fork into background
    daemon

defaults
      # running mode
    mode               http
      # use global settings
    log                global
      # get HTTP request log
    option             httplog
      # timeout if backends do not reply
    timeout connect    10s
      # timeout on client side
    timeout client     30s
      # timeout on server side
    timeout server     30s

# define frontend ( set any name for "http-in" section )
frontend http-in
      # listen 80
    bind *:80
      # set default backend
    default_backend    backend_servers
      # send X-Forwarded-For header
    option             forwardfor
# define backend
backend backend_servers
      # balance with roundrobin
        balance            roundrobin
        server  www01   192.168.1.201:80        check
        server  www02   192.168.1.202:80        check
        server  www03   192.168.1.203:80        check
        server  www04   192.168.1.204:80        check
        server  www05   192.168.1.205:80        check
        server  www06   192.168.1.206:80        check
        server  www07   192.168.1.207:80        check
        server  www08   192.168.1.208:80        check
        server  www09   192.168.1.209:80        check
        server  www10   192.168.1.210:80        check
        server  www11   192.168.1.211:80        check
        server  www12   192.168.1.212:80        check
        server  www13   192.168.1.213:80        check
        server  www14   192.168.1.214:80        check
        server  www15   192.168.1.215:80        check
        server  www16   192.168.1.216:80        check
        server  www17   192.168.1.217:80        check
        server  www18   192.168.1.218:80        check
        server  www19   192.168.1.219:80        check
        server  www20   192.168.1.220:80        check
        server  www21   192.168.1.221:80        check
        server  www22   192.168.1.222:80        check
        server  www23   192.168.1.223:80        check
        server  www24   192.168.1.224:80        check
        server  www25   192.168.1.225:80        check
        server  www26   192.168.1.226:80        check
        server  www27   192.168.1.227:80        check
        server  www28   192.168.1.228:80        check
        server  www29   192.168.1.229:80        check
        server  www30   192.168.1.230:80        check
        server  www31   192.168.1.231:80        check
        server  www32   192.168.1.232:80        check
        server  www33   192.168.1.233:80        check
        server  www34   192.168.1.234:80        check
        server  www35   192.168.1.235:80        check
        server  www36   192.168.1.236:80        check
        server  www37   192.168.1.237:80        check
        server  www38   192.168.1.238:80        check
        server  www39   192.168.1.239:80        check
        server  www40   192.168.1.240:80        check
        server  www41   192.168.1.241:80        check
        server  www42   192.168.1.242:80        check
        server  www43   192.168.1.243:80        check
        server  www44   192.168.1.244:80        check
        server  www45   192.168.1.245:80        check
        server  www46   192.168.1.246:80        check
        server  www47   192.168.1.247:80        check
        server  www48   192.168.1.248:80        check
        server  www49   192.168.1.249:80        check
        server  www50   192.168.1.250:80        check
        server  www51   192.168.1.251:80        check
        server  www52   192.168.1.252:80        check
        server  www53   192.168.1.253:80        check
        server  www54   192.168.1.254:80        check

----------------------------------------------------------------------------



[root@lb-server centos]# systemctl start haproxy
[root@lb-server centos]# systemctl enable haproxy

[root@lb-server centos]# vi /etc/rsyslog.conf


15	$ModLoad imudp
16	$UDPServerRun 514
17	$AllowedSender UDP, 127.0.0.1



54	*.info;mail.none;authpriv.none;cron.none,local2.none   /var/log/messages	
55	local2.*                                               /var/log/haproxy.log

[root@lb-server centos]# systemctl restart rsyslog



[root@lb-server centos]# vi /etc/httpd/conf/httpd.conf


196	LogFormat "\"%{X-Forwarded-For}i\" %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined

[root@lb-server centos]# systemctl restart httpd


# 인스턴스 스냅샷 생성을 위해 종료
[root@lb-server centos]# init 0





[root@Controller ~(keystone)]# openstack server image create LB_Server --name Snap_LB_image

# 기존 템플릿 파일 이미지 수정.
[root@Controller ~(keystone)]# vi /etc/heat/templates/LB.yaml

heat_template_version: 2015-10-15

resources:
  floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: ext_net

  instance_port:
    type: OS::Neutron::Port
    properties:
      network: int_net
      security_groups:
        - security01
      fixed_ips:
        - subnet_id: int_subnet

  server:
    type: OS::Nova::Server
    properties:
      name: LB_Server
      image: Snap_LB_image
      flavor: m1.micro
      key_name: SSH_KEY
      networks:
        - port: { get_resource: instance_port }
      user_data_format: RAW
      user_data: |
        #!/bin/bash
        #while [ 1 ] ; do echo $((13**99)) 1>/dev/null 2>&1; done


  association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: floating_ip }
      server_id: { get_resource: server }

outputs:
  instance_name:
    description: Web_Server
    value: { get_attr: [ server, name ] }
  instance_ip:
    description: IP address of the instance.
    value: { get_attr: [ server, first_address ] }

